/*
 * tcprtosserver.h
 *
 *  Created on: Sep 6, 2022
 *      Author: kss
 */

#ifndef MODULE_ETHERNET_TCP_RTOS_TCP_RTOS_H_
#define MODULE_ETHERNET_TCP_RTOS_TCP_RTOS_H_

#include <string>

//Defines
#define max_num_buf_             1024



#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
}
#endif

#include "lwip.h"
#include "lwip/init.h"
#include "lwip/netif.h"
#include "lwip/opt.h"
#include "lwip/api.h"
#include "lwip/sys.h"

#include "netif.h"
#include "ethernetif.h"

#include "string.h"







void TcpServerSend(const char *data);
void TcpServerDelete();
void TcpServerRecvBuffer(const char *data);

//-----------------------------------------------------------------------class

class TcpRtos
{
	private:
		/*main data structure*/
		data_structure* Dst_ = nullptr;

		/*network interface values*/
		struct netif gnetif;
		ip4_addr_t ipaddr, netmask, gateway;
		uint8_t ip_address[4], netmask_address[4] ,gateway_address[4];

		/*netconn values*/
		struct netconn* conn_ = nullptr;
		struct netconn* buf_conn_ = nullptr;
		struct netconn* accept_conn_ = nullptr;

		err_t err;
		err_t accept_err;

		/*status values*/
		bool is_init_ = false;
		bool is_run_ = false;
		bool is_error_ = false;

		/*RTOS task(handle)values*/
		osThreadId TcpAcceptConnHandle = nullptr;
		osThreadId TcpServerRecvHandle = nullptr;
		osThreadId TcpServerSendHandle = nullptr;



	public:



	private:
		void LWIPInitialize();

		static void TCPAcceptConnTask(void const *argument)


	public:
		TcpRtos();
		TcpRtos(data_structure* Dst);
		virtual ~TcpRtos();


		void Initialize();
		TcpRtos& SetData(data_structure* Dst);
};






#endif /* MODULE_ETHERNET_TCP_RTOS_TCP_RTOS_H_ */
